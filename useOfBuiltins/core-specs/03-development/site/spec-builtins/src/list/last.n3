@prefix list: <http://www.w3.org/2000/10/swap/list#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix fno: <https://w3id.org/function/ontology#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix vs: <http://www.w3.org/2003/06/sw-vocab-status/ns#> .

list:last a fno:Function ;
    vs:term_status  "testing" ;
    dcterms:comment """Extracts the last member of a list. 
`true` if and only the subject is a list and `$o` is the last member of that list.
`$o` can be calculated as a function of the subject.""" ;
    fno:example ( 
            [ a fno:Test ;
                dcterms:description """
Extract the last element of the list (1 2 3 4).
            """ ;
                rdfs:seeAlso <> ;
                fno:expression """
@prefix : <http://example.org/#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#> .

{ (1 2 3 4) list:last ?last . } => { :result :is ?last . } .
            """ ;
                fno:result """
:result :is 4. 
            """ ] 

            [ a fno:Test ;
                dcterms:description """
Test if the last element of the list (1 2 3 4) is 4.
            """ ;
                rdfs:seeAlso <> ;
                fno:expression """
@prefix : <http://example.org/#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#> .

:let :param (1 2 3 4).

{ 
    :let :param ?param .
    ?param list:last 4 . 
} 
=> 
{ 
    :result :is true . 
} .
            """ ;
                fno:result """
:result :is true. 
            """ ] 
    ) ;
    fno:name "last" ;
    fno:subject ( [ a rdf:Property ;
                fno:parameter ( [ a fno:Parameter ;
                            dcterms:description "" ;
                            fno:mode "+" ;
                            fno:predicate "$s" ;
                            fno:required true ;
                            fno:type rdf:List ] ) ] ) .
