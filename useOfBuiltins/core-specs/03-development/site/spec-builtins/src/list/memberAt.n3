@prefix list: <http://www.w3.org/2000/10/swap/list#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix fno: <https://w3id.org/function/ontology#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix vs: <http://www.w3.org/2003/06/sw-vocab-status/ns#> .

list:memberAt a fno:Function ;
    vs:term_status  "testing" ;
    vs:moreinfo "The dcterms:comment seems wrong. Jen, eye nor eye support the negative index. Only eye supports the s_2 variable (@phochste)" ;
    dcterms:comment """Gets the member of a list at a given position (where the position of the first element is 1).
`true` if and only if `$s_0` has an element at position `$s_1`, and if that element and `$o` can unify.
Note that if `$s_1` is a variable, this builtin may bind it to more than one value (e.g. `((“A” “B” “A”) ?i) list:memberAt "A"`).
In case of a negative integer, the index will count backwards from the length of the list.""" ;
    fno:example ( 
            [ a fno:Test ;
                dcterms:description """
Get the third member of the list ("dog" "pengiun" "cat").
            """ ;
                rdfs:seeAlso <> ;
                fno:expression """
@prefix : <http://example.org/#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#> .

:let :param ("dog" "pengiun" "cat").

{
    :let :param ?param .
    ( ?param 2 ) list:memberAt ?third .
} 
=> 
{ 
    :result :is ?third . 
} .
            """ ;
                fno:result """
:result :is "cat" .
            """ 
           ] 

            [ a fno:Test ;
                dcterms:description """
Find the index of "cat" in the list ("dog" "cat" "pengiun" "cat").
            """ ;
                rdfs:seeAlso <> ;
                fno:expression """
@prefix : <http://example.org/#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#> .

:let :param ("dog" "cat" "pengiun" "cat").

{
    :let :param ?param .
    ( ?param ?index ) list:memberAt ?param .
} 
=> 
{ 
    :result :is ?index . 
} .
            """ ;
                fno:result """
:result :is 1 .
:result :is 3 .
            """ 
          ] 
    ) ;
    fno:name "memberAt" ;
    fno:subject ( [ a rdf:Property ;
                fno:parameter ( [ a fno:Parameter ;
                            dcterms:description "" ;
                            fno:mode "+" ;
                            fno:predicate "$s" ;
                            fno:required true ;
                            fno:type rdf:List ] ) ] ) .
