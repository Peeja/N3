@prefix list: <http://www.w3.org/2000/10/swap/list#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix fno: <https://w3id.org/function/ontology#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix vs: <http://www.w3.org/2003/06/sw-vocab-status/ns#> .

list:append a fno:Function ;
    vs:term_status  "testing" ;
    dcterms:comment """Concatenates separate lists into a single list. 
`true` if and only if the subject is a list of lists and the concatenation of all those lists is `$o`.
`$o` can be calculated as a function of the subject. 
Example: `( (1 2) (3 4) ) list:append (1 2 3 4).`""" ;
    fno:example ( 
            [ a fno:Test ;
                dcterms:description """
Append (3 4) to the list (1 2).
            """ ;
                rdfs:seeAlso <>;
                fno:expression """
@prefix : <http://example.org/#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#> .

{ ( (1 2) (3 4) ) list:append ?list . } => { :result :is ?list . } .
            """ ;
                fno:result """
:result :is (1 2 3 4). 
            """ ] 

            [ a fno:Test ;
                dcterms:description """
What do we need to prepend to (3 4) to get (1 2 3 4)?
            """ ;
                rdfs:seeAlso <>;
                fno:expression """
@prefix : <http://example.org/#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#> .

{ ( ?what (3 4) ) list:append (1 2 3 4) . } => { :result :is ?what . } .
            """ ;
                fno:result """
:result :is (1 2). 
            """ ] 

            [ a fno:Test ;
                dcterms:description """
What do we need to append to (1 2) to get (1 2 3 4)?
            """ ;
                rdfs:seeAlso <>;
                fno:expression """
@prefix : <http://example.org/#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#> .

{ ( (1 2) ?what ) list:append (1 2 3 4) . } => { :result :is ?what . } .
            """ ;
                fno:result """
:result :is (3 4). 
            """ ] 

            [ a fno:Test ;
                dcterms:description """
Is the list (1 2 3 4) equal to appending (1), (2 3) , (4)?
            """ ;
                rdfs:seeAlso <>;
                fno:expression """
@prefix : <http://example.org/#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#> .

{ ( (1) (2 3) (4) ) list:append (1 2 3 4) . } => { :result :is true . } .
            """ ;
                fno:result """
:result :is true. 
            """ ] 

    ) ;
    fno:name "append" ;
    fno:subject ( [ a rdf:Property ;
                fno:parameter ( [ a fno:Parameter ;
                            dcterms:description "" ;
                            fno:mode "+" ;
                            fno:predicate "$s" ;
                            fno:required true ;
                            fno:type rdf:List ] ) ] ) .
