@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix fno: <https://w3id.org/function/ontology#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix vs: <http://www.w3.org/2003/06/sw-vocab-status/ns#> .

log:conjunction a fno:Function ;
    vs:term_status  "testing" ;
    dcterms:comment """A function to merge formulae: logical AND.
`true` if and only if `o`, which can be generated, is a formula containing a copy of each of the formulae `$s_1 .. $s_n`.""" ;
    fno:example ( 
            [ a fno:Test ;
                dcterms:description """
Merge the formulas "{ :Felix a :Cat . }" , "{ :Pluto a :Dog . }", "{ :Pingu a :Penguin . }" .
            """ ;
                rdfs:seeAlso <> ;
                fno:expression """
@prefix : <http://example.org/#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#> .

{ 
    ( { :Felix a :Cat . }
      { :Pluto a :Dog . }  
      { :Pingu a :Penguin . }
    ) log:conjunction ?merged .
} 
=> 
{ 
    :result :is ?merged . 
} .
            """ ;
                fno:result """
:result :is { 
    :Felix a :Cat . 
    :Pingu a :Penguin . 
    :Pluto a :Dog . 
} .
            """ 
           ] 
    ) ;
    fno:name "conjunction" ;
    fno:object ( [ a rdf:Property ;
                fno:parameter ( [ a fno:Output ;
                            dcterms:description "" ;
                            fno:mode "*" ;
                            fno:predicate "$o.0" ;
                            fno:required true ;
                            fno:type log:Formula ] ) ] ) ;
    fno:subject ( [ a rdf:Property ;
                fno:parameter ( [ a fno:Parameter ;
                            dcterms:description "" ;
                            fno:mode "+" ;
                            fno:predicate "$s" ;
                            fno:required true ;
                            fno:type rdf:List ] ) ] ) .
