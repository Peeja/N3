@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix fno: <https://w3id.org/function/ontology#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix fnon: <https://w3id.org/function/ontology/n3#> .

log:forAllIn a fno:Function ;
    fnon:tldr "For each result of the first clause, checks whether the second clause holds for it as well." ;
    dcterms:comment """`true` if and only if, for each solution for which the first clause `$s.0` is true, the second clause `$s.1` is true as well. 
This is a scoped universal quantification.""" ;
    fno:example ( [ a fno:Test ;
                dcterms:description """
For each subtask of a composite task, check whether the subtask is completed. 
            """ ;
                rdfs:seeAlso <> ;
                fno:expression """
@prefix : <http://example.org/#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#> .

:c a :CompositeTask ;
    :subTask :s1 , :s2 , :s3 .
:s1 :state :Completed .
:s2 :state :Completed . 
:s3 :state :Completed .

{
    ?c a :CompositeTask .
    ( { ?c :subTask ?s } { ?s :state :Completed } ) log:forAllIn _:t .
}
=>
{
    :result :is true .
} . 
            """ ;
                fno:result """
:result :is true. 
            """ 
            ]  ) ;
    fno:name "forAllIn" ;
    fno:parameter (
        [ a fno:Parameter ;
            dcterms:description "" ;
            fno:mode "+" ;
            fno:predicate "$s" ;
            fno:type rdf:List ;
            fnon:position fnon:subject ;
            fnon:listElements ( [
                fnon:predicate "$s.0" ;
                fno:mode "+" ;
                fno:type log:Formula
            ] [
                fnon:predicate "$s.1" ;
                fno:mode "+" ;
                fno:type log:Formula
            ] )
        ] [ a fno:Parameter ;
            dcterms:description "Scope of the universal quantification. Leave as a variable to use current N3 document as scope." ;
            fno:predicate "$o" ;
            fno:mode "?" ; # TODO unsure about this
            fnon:position fnon:object
        ] ) .
