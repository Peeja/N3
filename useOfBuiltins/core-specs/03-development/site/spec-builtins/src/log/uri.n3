@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix fno: <https://w3id.org/function/ontology#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix vs: <http://www.w3.org/2003/06/sw-vocab-status/ns#> .

log:uri a fno:Function ;
    vs:term_status  "testing" ;
    dcterms:comment """This allows one to look at the actual string of the URI which identifies this.
(Cwm can get the URI of a resource or get the resource from the URI.)
This is a level breaker, breaking the rule of not looking inside a
URI.   Use (eg with  string:match) to replace RDF's old "aboutEach"
functionality. Use to implement the URI spec and protocol specs, etc.
""" ;
    fno:example ( 
              [ a fno:Test ;
                dcterms:description """
Parse the URI <https://www.w3.org> into a string .
            """ ;
                rdfs:seeAlso <> ;
                fno:expression """
@prefix : <http://example.org/#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#> .

{ <https://www.w3.org> log:uri ?uri . } => { :result :is ?uri . } .
            """ ;
                fno:result """
:result :is "https://www.w3.org" .
            """ 
            ] 
    ) ;
    fno:object ( [ a rdf:Property ;
                fno:parameter ( [ a fno:Output ;
                            dcterms:description "" ;
                            fno:mode "*" ;
                            fno:predicate "$o.0" ;
                            fno:required true ;
                            fno:type log:String ] ) ] ) .
