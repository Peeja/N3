@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix fno: <https://w3id.org/function/ontology#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix vs: <http://www.w3.org/2003/06/sw-vocab-status/ns#> .

log:semantics a fno:Function ;
    vs:term_status  "testing" ;
    dcterms:comment """The log:semantics of a document is the formula achieved by parsing representation of the document.
For a document in Notation3, `log:semantics` is the `log:parsedAsN3` of the `log:content` of the document.
For a document in another RDF syntax, it is parsed according to the appropriate specification to yield an RDF formula (a subclass of N3 `log:Formula`).
Evaluates to `false` if an unrecognized document format is retrieved.
Aside: Philosophers will be distracted here into worrying about the meaning of meaning. At least we didn't call this function "meaning"! 
In as much as N3 is used as an interlingua for interoperability for different systems, this for an N3 based system is the meaning expressed by a document.
Related: see `log:parsedAsN3` and `log:content`.""" ;
    fno:example ( 
              [ a fno:Test ;
                dcterms:description """
Read the contents of the file <semantics.data> and parse it as Notation3.
We assume <semantics.data> contains the text:

  @prefix : <http://example.org/#>.
  :Socrates a :Human .
            """ ;
                rdfs:seeAlso <> ;
                fno:expression """
@prefix : <http://example.org/#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#> .

{ <semantics.data> log:semantics ?semantics . } => { :result :is ?semantics } .
            """ ;
                fno:result """
:result :is { :Socrates a :Human . } .
            """ 
            ] 
    ) ;
    fno:name "semantics" ;
    fno:object ( [ a rdf:Property ;
                fno:parameter ( [ a fno:Output ;
                            dcterms:description "" ;
                            fno:mode "*" ;
                            fno:predicate "$o.0" ;
                            fno:required true ;
                            fno:type log:Formula ] ) ] ) ;
    fno:subject ( [ a rdf:Property ;
                fno:parameter ( [ a fno:Parameter ;
                            dcterms:description "" ;
                            fno:mode "+" ;
                            fno:predicate "$s" ;
                            fno:required true ;
                            fno:type log:N3Document ] ) ] ) .
